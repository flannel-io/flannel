{
  "Network": "10.50.0.0/16",
  "Backend": {
    "Type": "extension",
    "PreStartupCommand": "wg genkey | tee privatekey | wg pubkey",
    "PostStartupCommand": "export SUBNET_IP=$(echo $SUBNET | cut -d'/' -f 1); export SUBNET_IPV6=$(echo $IPV6_SUBNET | cut -d'/' -f 1);  ip link del flannel-wg 2>/dev/null; ip link add flannel-wg type wireguard && wg set flannel-wg listen-port 51820 private-key privatekey && (test -z ${SUBNET_IP} || ip addr add $SUBNET_IP/32 dev flannel-wg) && (test -z $SUBNET_IPV6 || ip addr add $SUBNET_IPV6/128 dev flannel-wg) && ip link set flannel-wg up && (test -z ${NETWORK} || ip route add $NETWORK dev flannel-wg) && (test -z ${IPV6_NETWORK} || ip route add $IPV6_NETWORK dev flannel-wg)",
    "ShutdownCommand": "ip link del flannel-wg",
    "SubnetAddCommand": "read PUBLICKEY; export IPS=$(echo ${SUBNET},${IPV6_SUBNET} | sed -e 's/^,//' -e 's/,$//'); wg set flannel-wg peer $PUBLICKEY endpoint $PUBLIC_IP:51820 allowed-ips $IPS",
    "SubnetRemoveCommand": "read PUBLICKEY; wg set flannel-wg peer $PUBLICKEY remove"
  }
}
